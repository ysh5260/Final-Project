<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.1" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_3_1.xsd">

	<!-- The definition of the Root Spring Container shared by all Servlets 
		and Filters -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>/WEB-INF/spring/root-context.xml</param-value>
		<!-- /WEB-INF/spring/security-context.xml -->
	</context-param>
	<context-param>
		<param-name>spring.profiles.active</param-name>
		<param-value>dev</param-value>
	</context-param>
	<context-param>
		<param-name>spring.profiles.default</param-name>
		<param-value>dev</param-value>
	</context-param>
	<context-param>
		<param-name>spring.liveBeansView.mbeanDomain</param-name>
		<param-value>dev</param-value>
	</context-param>

	<!-- Creates the Spring Container shared by all Servlets and Filters -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>

	<!-- Processes application requests -->
	<servlet>
		<servlet-name>appServlet</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet
		</servlet-class>
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/WEB-INF/spring/appServlet/servlet-context.xml
			</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>

		<!-- multipart-config : 메모리사이즈, 업로드 파일 저장 위치, 최대 크기 설정 아래에 설정한 내용을 가지고 
			@MultipartConfig 어노테이션을 활용하면 아래에서 셋팅한 정보들을 바탕으로 파일 업로드를 진행할 수 있다. -->
		<multipart-config>
			<location>C:\\upload</location>	<!-- 업로드 되는 파일을 저장할 공간 -->
			<max-file-size>20971520</max-file-size>	<!-- 업로드 파일의 최대 크기 1MB * 20 -->
			<max-request-size>41943040</max-request-size>	<!-- 한번에 올릴 수 있는 최대 크기 40MB -->
			<!-- 메모리 사용 크기 : 20MB - 업로드 하는 파일이 임시로 파일로 저장되지 않고 메모리에서 바로 스트림으로 전달되는 
				크기의 한계 -->
			<file-size-threshold>20971520</file-size-threshold>
		</multipart-config>
	</servlet>

	<servlet-mapping>
		<servlet-name>appServlet</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>

	<!-- 인코딩 필터 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter
		</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 파일업로드를 진행하기 위해 등록한 MultipartFilter -->
	<filter>
		<filter-name>MultipartFilter</filter-name>
		<filter-class>org.springframework.web.multipart.support.MultipartFilter
		</filter-class>
	</filter>
	<filter-mapping>
		<filter-name>MultipartFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<!-- 스프링 시큐리티를 위한 서블릿 필터 클래스를 서블릿 컨테이너에 등록한다. -->
	<!-- <filter> -->
	<!-- <filter-name>springSecurityFilterChain</filter-name> -->
	<!-- <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class> -->
	<!-- </filter> -->
	<!-- <filter-mapping> -->
	<!-- <filter-name>springSecurityFilterChain</filter-name> -->
	<!-- <url-pattern>/*</url-pattern> -->
	<!-- </filter-mapping> -->

</web-app>
